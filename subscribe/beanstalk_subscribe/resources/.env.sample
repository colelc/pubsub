## Environment can be d, t, or p - will default to d if value is not set on the line below.
## config.py will extract all environment variables based on the value for ENV
##
## For example:
## If ENV=d, only the environment variables prefixed with "d." will be used.
## Further, the "d." will be stripped off, so that within the project source.
## To reference an environment value from inside the source, here is an example:
##   If ENV=d, then config.get("HOST") will return the value for "d.HOST".
##
ENV=d
#
d.environment=development
t.environment=test
p.environment=production
#
# beanstalk stuff
d.beanstalk.server=sds-deve.fuqua.duke.edu
t.beanstalk.server=sds-deve.fuqua.duke.edu
p.beanstalk.server=sds-deve.fuqua.duke.edu
#
d.beanstalk.port=11300
t.beanstalk.port=11300
p.beanstalk.port=11300
#
d.tube=mlpublish
t.tube=mlpublish
p.tube=mlpublish
#
d.job.file.directory=/tmp
t.job.file.directory=/tmp
p.job.file.directory=/tmp
#
d.job.script.name=doIt.sh
t.job.script.name=doIt.sh
p.job.script.name=doIt.sh
#
d.list.work.directory=/home/win.duke.edu/lcc9/projects/pubsub/subscribe/beanstalk_subscribe/work
t.list.work.directory=/var/tmp/dist_lists
p.list.work.directory=/var/tmp/dist_lists
#
d.list.staging.directory=/home/win.duke.edu/lcc9/projects/pubsub/subscribe/beanstalk_subscribe/mnt/dist_lists
t.list.staging.directory=/mnt/dist_lists
p.list.staging.directory=/mnt/dist_lists